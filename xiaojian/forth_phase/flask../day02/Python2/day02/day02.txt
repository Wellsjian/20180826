回顾：
	1.Flask是基于python并且依赖jinja2模板引擎的框架。
	2.注册路由：客户端与Flask程序交互
		1）用户在浏览器输入请求地址->request
		2）Flask程序接收请求，分析请求地址
		3）找到对应视图函数，执行相关操作，提供响应数据
			response给浏览器
		4）浏览器解析给用户显示
---------------------------------

一、模板
	1.模板是一种“Python+html”的网页结构，允许在HTML文件中定义变量，定义流程控制。使用模板可以使视图函数专注于处理业务逻辑，将页面渲染交由模板控制
	2.使用
		1）导入 render_template
		2）在视图函数中使用render_template("模板文件")，生成模板字符串，交由浏览器解析
		3）所有的模板文件必须存在名为"templates"的文件下
	3.变量代码块
		1）模板中使用变量，语法{{ 变量名(key) }}
		2）从视图函数中获取相关的变量，传递到模板文件中。
			return render_template("模板文件",key1=value1,key2=value2)
			函数中可以传递若干键值对，其中的key名就是在模板文件中使用的变量名
		3）使用locals()返回字典，包含所有局部变量
				params = locals()
				{
					'tup': ('ZX', 'DB'), 
					'name': '老Ｑ', 
					'dic': {'age': 30, 'name': 'Maria'}, 'list': ['保健', '唱Ｋ'], 
					'age': 30
				}
		4）过滤器
			允许模板中的变量在输出之前修改成其他的值，修改显示
			分类：
				upper	转大写字母
				lower	转小写字母
				title	首字母大写
				first	获取列表中第一个
				last	获取最后一个
				length	获取列表长度
				default() 如果变量未赋值，可采用默认值
				trim	去掉字符串两端的空格
				...
			语法：
				{{ 变量|过滤器1|过滤器2 }}
			
			





	










	